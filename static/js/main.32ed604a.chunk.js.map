{"version":3,"sources":["components/ContactForm/ContactForm.js","components/ContactForm/index.js","components/ContactList/index.js","components/ContactList/ContactList.js","components/Filter/index.js","components/Filter/Filter.js","components/App/index.js","components/App/App.js","index.js"],"names":["schema","Joi","object","name","string","alphanum","min","max","required","number","pattern","message","ContactForm","state","changeInput","e","stateName","String","target","toLowerCase","undefined","Error","setState","value","onSubmit","setContacts","props","preventDefault","result","validate","error","alert","resetState","this","className","type","onChange","Component","ContactList","items","onDelete","list","map","id","key","onClick","Filter","filter","onFilter","App","contacts","test","some","item","newContacts","push","shortid","handlerDrop","setFilter","JSON","parse","localStorage","getItem","setItem","stringify","includes","ReactDOM","render","document","getElementById"],"mappings":"iVAOMA,G,MAASC,IAAIC,OAAO,CACxBC,KAAMF,IAAIG,SACPC,WACAC,IAAI,GACJC,IAAI,IACJC,WACHC,OAAQR,IAAIG,SACTM,QAAQ,2BACRC,QACC,yEAEDH,cChBUI,E,2MDwBbC,MAAQ,CACNV,KAAM,GACNM,OAAQ,I,EAUVK,YAAc,SAAAC,GAAM,IACVF,EADS,eACTA,MACFG,EAAYC,OAAOF,EAAEG,OAAOf,MAAMgB,cAExC,QAAyBC,IAArBP,EAAMG,GACR,MAAM,IAAIK,MAAJ,mBAAsBL,EAAtB,oBAER,EAAKM,SAAL,eACGN,EAAYD,EAAEG,OAAOK,S,EAI1BC,SAAW,SAAAT,GAAM,IAAD,EACW,EAAKF,MAAtBV,EADM,EACNA,KAAMM,EADA,EACAA,OACNgB,EAAgB,EAAKC,MAArBD,YAGR,GAFAV,EAAEY,kBAEGxB,IAASM,EACZ,OAAO,EAET,IAAMmB,EAAS5B,EAAO6B,SAAS,CAAE1B,OAAMM,WACvC,OAAImB,EAAOE,OACTC,MAAMH,EAAOE,MAAMnB,UACZ,IAGTc,EAAYtB,EAAMM,GAClB,EAAKuB,cAEE,I,4EAnCPC,KAAKX,SAAS,CACZnB,KAAM,GACNM,OAAQ,O,+BAoCF,IAAD,EACkBwB,KAAKpB,MAAtBV,EADD,EACCA,KAAMM,EADP,EACOA,OAEd,OACE,0BAAMyB,UAAU,OAAOV,SAAUS,KAAKT,UACpC,6BACE,+BACE,yBAAKU,UAAU,SAAf,QACA,2BACEC,KAAK,OACLZ,MAAOpB,EACPA,KAAK,OACLiC,SAAUH,KAAKnB,eAGnB,+BACE,yBAAKoB,UAAU,SAAf,UACA,2BACEC,KAAK,OACLZ,MAAOd,EACPN,KAAK,SACLiC,SAAUH,KAAKnB,gBAIrB,4BAAQoB,UAAU,SAASC,KAAK,UAAhC,oB,GA1EiCE,aEnB1BC,G,MCGK,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAEtBC,EAAOF,EAAMG,KAAI,YAA2B,IAAxBC,EAAuB,EAAvBA,GAAIxC,EAAmB,EAAnBA,KAAMM,EAAa,EAAbA,OAClC,OACE,wBAAImC,IAAKD,GACP,0BAAMT,UAAU,QAAQ/B,EAAxB,KACA,0BAAM+B,UAAU,UAAUzB,GAC1B,4BAAQyB,UAAU,SAASC,KAAK,SAASU,QAAS,kBAAML,EAASG,KAAjE,cAMN,OAAO,wBAAIT,UAAU,gBAAgBO,KChBxBK,G,MCGA,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SACxB,OACE,yBAAKd,UAAU,UACb,2CACA,2BAAOC,KAAK,OAAOZ,MAAOwB,EAAQX,SAAUY,OCPnCC,E,2MCObpC,MAAQ,CACNqC,SAAU,CACR,CACEP,GAAI,QACJxC,KAAM,SACNM,OAAQ,WAEV,CACEkC,GAAI,QACJxC,KAAM,OACNM,OAAQ,YAGZsC,OAAQ,I,EAeVtB,YAAc,SAACtB,EAAMM,GAAY,IACvByC,EAAa,EAAKrC,MAAlBqC,SACJC,EAAO,GAaX,GAZAD,EAASE,MAAK,SAAAC,GACZ,OAAIA,EAAKlD,OAASA,EAERgD,EAAOhD,EAEbkD,EAAK5C,SAAWA,IAEV0C,EAAO1C,MAKf0C,EAAM,OAAOpB,MAAM,GAAD,OAAIoB,EAAJ,sBAEtB,IAAMG,EAAW,YAAOJ,GAWxB,OATAI,EAAYC,KAAK,CACfZ,GAAIa,MACJrD,OACAM,WAEF,EAAKa,SAAS,CACZ4B,SAAUI,KAGL,G,EAGTG,YAAc,SAAAd,GAAO,IAEbO,EAFY,eACVrC,MACeqC,SAASH,QAAO,SAAAM,GAAI,OAAIA,EAAKV,KAAOA,KAE3D,EAAKrB,SAAS,CACZ4B,c,EAIJQ,UAAY,SAAA3C,GACV,EAAKO,SAAS,CACZyB,OAAQhC,EAAEG,OAAOK,S,mFArDnB,IAAM2B,EAAWS,KAAKC,MAAMC,aAAaC,QAAQ,aAAe,MAChE7B,KAAKX,SAAS,CACZ4B,e,2CAIkB,IACZA,EAAajB,KAAKpB,MAAlBqC,SACRW,aAAaE,QAAQ,WAAYJ,KAAKK,UAAUd,M,+BAiDxC,IAAD,EACsBjB,KAAKpB,MAA1BqC,EADD,EACCA,SAAUH,EADX,EACWA,OACZR,EAAQW,EAASH,QAAO,SAAAM,GAAI,OAChCpC,OAAOoC,EAAKlD,MACTgB,cACA8C,SAASlB,EAAO5B,kBAErB,OACE,6BACE,yCACA,kBAAC,EAAD,CAAaM,YAAaQ,KAAKR,cAC/B,kBAAC,EAAD,CAAQsB,OAAQA,EAAQC,SAAUf,KAAKyB,YACvC,kBAAC,EAAD,CAAanB,MAAOA,EAAOC,SAAUP,KAAKwB,mB,GAvFjBpB,aCHjC6B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.32ed604a.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Joi from '@hapi/joi';\n\nimport './ContactForm.scss';\n\nconst schema = Joi.object({\n  name: Joi.string()\n    .alphanum()\n    .min(3)\n    .max(30)\n    .required(),\n  number: Joi.string()\n    .pattern(/^([0-9]+?[ -]?)+?[0-9]$/)\n    .message(\n      \"Number isn't correct, please use only number and separator space or -\",\n    )\n    .required(),\n});\n\nexport default class ContactForm extends Component {\n  static propTypes = {\n    setContacts: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  resetState() {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  }\n\n  changeInput = e => {\n    const { state } = this;\n    const stateName = String(e.target.name).toLowerCase();\n\n    if (state[stateName] === undefined)\n      throw new Error(`No state ${stateName} in ContactForm`);\n\n    this.setState({\n      [stateName]: e.target.value,\n    });\n  };\n\n  onSubmit = e => {\n    const { name, number } = this.state;\n    const { setContacts } = this.props;\n    e.preventDefault();\n\n    if (!name || !number) {\n      return false;\n    }\n    const result = schema.validate({ name, number });\n    if (result.error) {\n      alert(result.error.message);\n      return false;\n    }\n\n    setContacts(name, number);\n    this.resetState();\n\n    return true;\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form className=\"form\" onSubmit={this.onSubmit}>\n        <div>\n          <label>\n            <div className=\"label\">Name</div>\n            <input\n              type=\"text\"\n              value={name}\n              name=\"name\"\n              onChange={this.changeInput}\n            />\n          </label>\n          <label>\n            <div className=\"label\">Number</div>\n            <input\n              type=\"text\"\n              value={number}\n              name=\"number\"\n              onChange={this.changeInput}\n            />\n          </label>\n        </div>\n        <button className=\"button\" type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n","import ContactForm from './ContactForm';\n\nexport default ContactForm;\n","import ContactList from './ContactList';\n\nexport default ContactList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './ContactList.scss';\n\nconst ContactList = ({ items, onDelete }) => {\n  // eslint-disable-next-line react/prop-types\n  const list = items.map(({ id, name, number }) => {\n    return (\n      <li key={id}>\n        <span className=\"name\">{name}:</span>\n        <span className=\"number\">{number}</span>\n        <button className=\"button\" type=\"button\" onClick={() => onDelete(id)}>\n          Delete\n        </button>\n      </li>\n    );\n  });\n  return <ul className=\"contact-list\">{list}</ul>;\n};\n\nContactList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      name: PropTypes.string,\n      number: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    }),\n  ).isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import Filter from './Filter';\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Filter.scss';\n\nconst Filter = ({ filter, onFilter }) => {\n  return (\n    <div className=\"filter\">\n      <h4>Find people</h4>\n      <input type=\"text\" value={filter} onChange={onFilter} />\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onFilter: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import App from './App';\n\nexport default App;\n","/* eslint-disable no-alert */\nimport React, { Component } from 'react';\nimport shortid from 'shortid';\n\nimport ContactForm from '../ContactForm';\nimport ContactList from '../ContactList';\nimport Filter from '../Filter';\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      {\n        id: 'unit1',\n        name: 'George',\n        number: '222-555',\n      },\n      {\n        id: 'unit2',\n        name: 'Beth',\n        number: '777-888',\n      },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = JSON.parse(localStorage.getItem('contacts') || '[]');\n    this.setState({\n      contacts,\n    });\n  }\n\n  componentDidUpdate() {\n    const { contacts } = this.state;\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }\n\n  setContacts = (name, number) => {\n    const { contacts } = this.state;\n    let test = '';\n    contacts.some(item => {\n      if (item.name === name) {\n        // eslint-disable-next-line no-return-assign\n        return (test = name);\n      }\n      if (item.number === number) {\n        // eslint-disable-next-line no-return-assign\n        return (test = number);\n      }\n      return false;\n    });\n\n    if (test) return alert(`${test} is already exist`);\n\n    const newContacts = [...contacts];\n\n    newContacts.push({\n      id: shortid(),\n      name,\n      number,\n    });\n    this.setState({\n      contacts: newContacts,\n    });\n\n    return true;\n  };\n\n  handlerDrop = id => {\n    const { state } = this;\n    const contacts = state.contacts.filter(item => item.id !== id);\n\n    this.setState({\n      contacts,\n    });\n  };\n\n  setFilter = e => {\n    this.setState({\n      filter: e.target.value,\n    });\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const items = contacts.filter(item =>\n      String(item.name)\n        .toLowerCase()\n        .includes(filter.toLowerCase()),\n    );\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm setContacts={this.setContacts} />\n        <Filter filter={filter} onFilter={this.setFilter} />\n        <ContactList items={items} onDelete={this.handlerDrop} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}